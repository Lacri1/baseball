{"ast":null,"code":"const JSP_BASE_URL = 'http://localhost:8080/d3';\nexport const authService = {\n  async login(id, pw) {\n    try {\n      const response = await fetch(`${JSP_BASE_URL}/login.jsp`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          id: id,\n          pw: pw\n        }),\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Login request failed:', error);\n      throw error;\n    }\n  },\n  async checkLoginStatus() {\n    try {\n      const response = await fetch(`${JSP_BASE_URL}/checkLogin.jsp`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        return {\n          isLoggedIn: false\n        };\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Check login status failed:', error);\n      return {\n        isLoggedIn: false\n      };\n    }\n  },\n  async logout() {\n    try {\n      const response = await fetch(`${JSP_BASE_URL}/logout.jsp`, {\n        method: 'POST',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n    return {\n      success: false\n    };\n  }\n};","map":{"version":3,"names":["JSP_BASE_URL","authService","login","id","pw","response","fetch","method","headers","body","URLSearchParams","credentials","ok","Error","status","data","json","error","console","checkLoginStatus","isLoggedIn","logout","success"],"sources":["C:/20/homepage/src/services/authService.js"],"sourcesContent":["const JSP_BASE_URL = 'http://localhost:8080/d3';\r\n\r\nexport const authService = {\r\n  async login(id, pw) {\r\n    try {\r\n      const response = await fetch(`${JSP_BASE_URL}/login.jsp`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          id: id,\r\n          pw: pw\r\n        }),\r\n        credentials: 'include'\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Login request failed:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async checkLoginStatus() {\r\n    try {\r\n      const response = await fetch(`${JSP_BASE_URL}/checkLogin.jsp`, {\r\n        method: 'GET',\r\n        credentials: 'include'\r\n      });\r\n\r\n      if (!response.ok) {\r\n        return { isLoggedIn: false };\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Check login status failed:', error);\r\n      return { isLoggedIn: false };\r\n    }\r\n  },\r\n\r\n  async logout() {\r\n    try {\r\n      const response = await fetch(`${JSP_BASE_URL}/logout.jsp`, {\r\n        method: 'POST',\r\n        credentials: 'include'\r\n      });\r\n\r\n      if (response.ok) {\r\n        return { success: true };\r\n      }\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n    }\r\n    \r\n    return { success: false };\r\n  }\r\n}; "],"mappings":"AAAA,MAAMA,YAAY,GAAG,0BAA0B;AAE/C,OAAO,MAAMC,WAAW,GAAG;EACzB,MAAMC,KAAKA,CAACC,EAAE,EAAEC,EAAE,EAAE;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,YAAY,EAAE;QACxDO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAE,IAAIC,eAAe,CAAC;UACxBP,EAAE,EAAEA,EAAE;UACNC,EAAE,EAAEA;QACN,CAAC,CAAC;QACFO,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,gBAAgBA,CAAA,EAAG;IACvB,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,iBAAiB,EAAE;QAC7DO,MAAM,EAAE,KAAK;QACbI,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAI,CAACN,QAAQ,CAACO,EAAE,EAAE;QAChB,OAAO;UAAEQ,UAAU,EAAE;QAAM,CAAC;MAC9B;MAEA,MAAML,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO;QAAEG,UAAU,EAAE;MAAM,CAAC;IAC9B;EACF,CAAC;EAED,MAAMC,MAAMA,CAAA,EAAG;IACb,IAAI;MACF,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,aAAa,EAAE;QACzDO,MAAM,EAAE,MAAM;QACdI,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAIN,QAAQ,CAACO,EAAE,EAAE;QACf,OAAO;UAAEU,OAAO,EAAE;QAAK,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACxC;IAEA,OAAO;MAAEK,OAAO,EAAE;IAAM,CAAC;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}